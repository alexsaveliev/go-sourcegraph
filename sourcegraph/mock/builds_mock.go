// generated by gen-mocks; DO NOT EDIT

package mock

import "sourcegraph.com/sourcegraph/go-sourcegraph/sourcegraph"

type BuildsService struct {
	Get_              func(build sourcegraph.BuildSpec, opt *sourcegraph.BuildGetOptions) (*sourcegraph.Build, sourcegraph.Response, error)
	GetRepoBuildInfo_ func(repo sourcegraph.RepoRevSpec, opt *sourcegraph.BuildsGetRepoBuildInfoOptions) (*sourcegraph.RepoBuildInfo, sourcegraph.Response, error)
	List_             func(opt *sourcegraph.BuildListOptions) ([]*sourcegraph.Build, sourcegraph.Response, error)
	Create_           func(repoRev sourcegraph.RepoRevSpec, opt *sourcegraph.BuildCreateOptions) (*sourcegraph.Build, sourcegraph.Response, error)
	Update_           func(build sourcegraph.BuildSpec, info sourcegraph.BuildUpdate) (*sourcegraph.Build, sourcegraph.Response, error)
	ListBuildTasks_   func(build sourcegraph.BuildSpec, opt *sourcegraph.BuildTaskListOptions) ([]*sourcegraph.BuildTask, sourcegraph.Response, error)
	CreateTasks_      func(build sourcegraph.BuildSpec, tasks []*sourcegraph.BuildTask) ([]*sourcegraph.BuildTask, sourcegraph.Response, error)
	UpdateTask_       func(task sourcegraph.TaskSpec, info sourcegraph.TaskUpdate) (*sourcegraph.BuildTask, sourcegraph.Response, error)
	GetLog_           func(build sourcegraph.BuildSpec, opt *sourcegraph.BuildGetLogOptions) (*sourcegraph.LogEntries, sourcegraph.Response, error)
	GetTaskLog_       func(task sourcegraph.TaskSpec, opt *sourcegraph.BuildGetLogOptions) (*sourcegraph.LogEntries, sourcegraph.Response, error)
	DequeueNext_      func() (*sourcegraph.Build, sourcegraph.Response, error)
}

func (s *BuildsService) Get(build sourcegraph.BuildSpec, opt *sourcegraph.BuildGetOptions) (*sourcegraph.Build, sourcegraph.Response, error) {
	return s.Get_(build, opt)
}

func (s *BuildsService) GetRepoBuildInfo(repo sourcegraph.RepoRevSpec, opt *sourcegraph.BuildsGetRepoBuildInfoOptions) (*sourcegraph.RepoBuildInfo, sourcegraph.Response, error) {
	return s.GetRepoBuildInfo_(repo, opt)
}

func (s *BuildsService) List(opt *sourcegraph.BuildListOptions) ([]*sourcegraph.Build, sourcegraph.Response, error) {
	return s.List_(opt)
}

func (s *BuildsService) Create(repoRev sourcegraph.RepoRevSpec, opt *sourcegraph.BuildCreateOptions) (*sourcegraph.Build, sourcegraph.Response, error) {
	return s.Create_(repoRev, opt)
}

func (s *BuildsService) Update(build sourcegraph.BuildSpec, info sourcegraph.BuildUpdate) (*sourcegraph.Build, sourcegraph.Response, error) {
	return s.Update_(build, info)
}

func (s *BuildsService) ListBuildTasks(build sourcegraph.BuildSpec, opt *sourcegraph.BuildTaskListOptions) ([]*sourcegraph.BuildTask, sourcegraph.Response, error) {
	return s.ListBuildTasks_(build, opt)
}

func (s *BuildsService) CreateTasks(build sourcegraph.BuildSpec, tasks []*sourcegraph.BuildTask) ([]*sourcegraph.BuildTask, sourcegraph.Response, error) {
	return s.CreateTasks_(build, tasks)
}

func (s *BuildsService) UpdateTask(task sourcegraph.TaskSpec, info sourcegraph.TaskUpdate) (*sourcegraph.BuildTask, sourcegraph.Response, error) {
	return s.UpdateTask_(task, info)
}

func (s *BuildsService) GetLog(build sourcegraph.BuildSpec, opt *sourcegraph.BuildGetLogOptions) (*sourcegraph.LogEntries, sourcegraph.Response, error) {
	return s.GetLog_(build, opt)
}

func (s *BuildsService) GetTaskLog(task sourcegraph.TaskSpec, opt *sourcegraph.BuildGetLogOptions) (*sourcegraph.LogEntries, sourcegraph.Response, error) {
	return s.GetTaskLog_(task, opt)
}

func (s *BuildsService) DequeueNext() (*sourcegraph.Build, sourcegraph.Response, error) {
	return s.DequeueNext_()
}

var _ sourcegraph.BuildsService = (*BuildsService)(nil)
