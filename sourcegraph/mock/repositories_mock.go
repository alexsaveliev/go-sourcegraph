// generated by gen-mocks; DO NOT EDIT

package mock

import (
	"sourcegraph.com/sourcegraph/go-sourcegraph/sourcegraph"
	"sourcegraph.com/sourcegraph/go-vcs/vcs"
	"sourcegraph.com/sourcegraph/vcsstore/vcsclient"
)

type ReposService struct {
	Get_               func(repo sourcegraph.RepoSpec, opt *sourcegraph.RepoGetOptions) (*sourcegraph.Repo, sourcegraph.Response, error)
	CreateStatus_      func(spec sourcegraph.RepoRevSpec, st sourcegraph.RepoStatus) (*sourcegraph.RepoStatus, sourcegraph.Response, error)
	GetCombinedStatus_ func(spec sourcegraph.RepoRevSpec) (*sourcegraph.CombinedStatus, sourcegraph.Response, error)
	GetSettings_       func(repo sourcegraph.RepoSpec) (*sourcegraph.RepoSettings, sourcegraph.Response, error)
	UpdateSettings_    func(repo sourcegraph.RepoSpec, settings sourcegraph.RepoSettings) (sourcegraph.Response, error)
	RefreshVCSData_    func(repo sourcegraph.RepoSpec) (sourcegraph.Response, error)
	Create_            func(newRepo *sourcegraph.Repo) (*sourcegraph.Repo, sourcegraph.Response, error)
	GetReadme_         func(repo sourcegraph.RepoRevSpec) (*vcsclient.TreeEntry, sourcegraph.Response, error)
	List_              func(opt *sourcegraph.RepoListOptions) ([]*sourcegraph.Repo, sourcegraph.Response, error)
	ListCommits_       func(repo sourcegraph.RepoSpec, opt *sourcegraph.RepoListCommitsOptions) ([]*sourcegraph.Commit, sourcegraph.Response, error)
	GetCommit_         func(rev sourcegraph.RepoRevSpec, opt *sourcegraph.RepoGetCommitOptions) (*sourcegraph.Commit, sourcegraph.Response, error)
	ListBranches_      func(repo sourcegraph.RepoSpec, opt *sourcegraph.RepoListBranchesOptions) ([]*vcs.Branch, sourcegraph.Response, error)
	ListTags_          func(repo sourcegraph.RepoSpec, opt *sourcegraph.RepoListTagsOptions) ([]*vcs.Tag, sourcegraph.Response, error)
	ListBadges_        func(repo sourcegraph.RepoSpec) ([]*sourcegraph.Badge, sourcegraph.Response, error)
	ListCounters_      func(repo sourcegraph.RepoSpec) ([]*sourcegraph.Counter, sourcegraph.Response, error)
}

func (s *ReposService) Get(repo sourcegraph.RepoSpec, opt *sourcegraph.RepoGetOptions) (*sourcegraph.Repo, sourcegraph.Response, error) {
	return s.Get_(repo, opt)
}

func (s *ReposService) CreateStatus(spec sourcegraph.RepoRevSpec, st sourcegraph.RepoStatus) (*sourcegraph.RepoStatus, sourcegraph.Response, error) {
	return s.CreateStatus_(spec, st)
}

func (s *ReposService) GetCombinedStatus(spec sourcegraph.RepoRevSpec) (*sourcegraph.CombinedStatus, sourcegraph.Response, error) {
	return s.GetCombinedStatus_(spec)
}

func (s *ReposService) GetSettings(repo sourcegraph.RepoSpec) (*sourcegraph.RepoSettings, sourcegraph.Response, error) {
	return s.GetSettings_(repo)
}

func (s *ReposService) UpdateSettings(repo sourcegraph.RepoSpec, settings sourcegraph.RepoSettings) (sourcegraph.Response, error) {
	return s.UpdateSettings_(repo, settings)
}

func (s *ReposService) RefreshVCSData(repo sourcegraph.RepoSpec) (sourcegraph.Response, error) {
	return s.RefreshVCSData_(repo)
}

func (s *ReposService) Create(newRepo *sourcegraph.Repo) (*sourcegraph.Repo, sourcegraph.Response, error) {
	return s.Create_(newRepo)
}

func (s *ReposService) GetReadme(repo sourcegraph.RepoRevSpec) (*vcsclient.TreeEntry, sourcegraph.Response, error) {
	return s.GetReadme_(repo)
}

func (s *ReposService) List(opt *sourcegraph.RepoListOptions) ([]*sourcegraph.Repo, sourcegraph.Response, error) {
	return s.List_(opt)
}

func (s *ReposService) ListCommits(repo sourcegraph.RepoSpec, opt *sourcegraph.RepoListCommitsOptions) ([]*sourcegraph.Commit, sourcegraph.Response, error) {
	return s.ListCommits_(repo, opt)
}

func (s *ReposService) GetCommit(rev sourcegraph.RepoRevSpec, opt *sourcegraph.RepoGetCommitOptions) (*sourcegraph.Commit, sourcegraph.Response, error) {
	return s.GetCommit_(rev, opt)
}

func (s *ReposService) ListBranches(repo sourcegraph.RepoSpec, opt *sourcegraph.RepoListBranchesOptions) ([]*vcs.Branch, sourcegraph.Response, error) {
	return s.ListBranches_(repo, opt)
}

func (s *ReposService) ListTags(repo sourcegraph.RepoSpec, opt *sourcegraph.RepoListTagsOptions) ([]*vcs.Tag, sourcegraph.Response, error) {
	return s.ListTags_(repo, opt)
}

func (s *ReposService) ListBadges(repo sourcegraph.RepoSpec) ([]*sourcegraph.Badge, sourcegraph.Response, error) {
	return s.ListBadges_(repo)
}

func (s *ReposService) ListCounters(repo sourcegraph.RepoSpec) ([]*sourcegraph.Counter, sourcegraph.Response, error) {
	return s.ListCounters_(repo)
}

var _ sourcegraph.ReposService = (*ReposService)(nil)
